Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions
    4          | error

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    6 declarations: %empty
    7             | declaration SEMICOLON declarations

    8 declaration: Identifier COLON INTEGER
    9            | Identifier COLON ARRAY L_SQUARE NUMBERS R_SQUARE OF INTEGER

   10 Identifier: IDENT
   11           | IDENT COMMA Identifier

   12 statements: statement SEMICOLON statements
   13           | statement SEMICOLON

   14 statement: var ASSIGN expression
   15          | elseloop
   16          | WHILE boolex BEGINLOOP statements ENDLOOP
   17          | DO BEGINLOOP statements ENDLOOP WHILE boolex
   18          | READ Vars
   19          | WRITE Vars
   20          | CONTINUE
   21          | RETURN expression

   22 elseloop: IF boolex THEN statements ENDIF
   23         | IF boolex THEN statements ELSE statements ENDIF

   24 boolex: relation
   25       | boolex OR relation

   26 relation: relation1
   27         | relation AND relation1

   28 relation1: r_exp
   29          | NOT r_exp

   30 r_exp: expression comp expression
   31      | TRUE
   32      | FALSE
   33      | L_PAREN boolex R_PAREN

   34 comp: EQ
   35     | NEQ
   36     | LT
   37     | GT
   38     | LTE
   39     | GTE

   40 expression: mult_exp plminus

   41 plminus: %empty
   42        | ADD mult_exp plminus
   43        | SUB mult_exp plminus

   44 mult_exp: term longterm

   45 longterm: %empty
   46         | MULT term longterm
   47         | DIV term longterm
   48         | MOD term longterm

   49 term: upperterm
   50     | SUB upperterm
   51     | IDENT lowerterm

   52 upperterm: var
   53          | NUMBERS
   54          | L_PAREN expression R_PAREN

   55 lowerterm: L_PAREN term_exp R_PAREN
   56          | L_PAREN R_PAREN

   57 term_exp: expression
   58         | expression COMMA term_exp

   59 var: IDENT
   60    | IDENT L_SQUARE expression R_SQUARE

   61 Vars: var
   62     | var COMMA Vars


Terminals, with rules where they appear

$end (0) 0
error (256) 4
FUNCTION (258) 5
BEGIN_PARAMS (259) 5
END_PARAMS (260) 5
BEGIN_LOCALS (261) 5
END_LOCALS (262) 5
BEGIN_BODY (263) 5
END_BODY (264) 5
INTEGER (265) 8 9
ARRAY (266) 9
OF (267) 9
IF (268) 22 23
THEN (269) 22 23
ENDIF (270) 22 23
ELSE (271) 23
WHILE (272) 16 17
DO (273) 17
BEGINLOOP (274) 16 17
ENDLOOP (275) 16 17
CONTINUE (276) 20
READ (277) 18
WRITE (278) 19
TRUE (279) 31
FALSE (280) 32
SEMICOLON (281) 5 7 12 13
COLON (282) 8 9
COMMA (283) 11 58 62
L_PAREN (284) 33 54 55 56
R_PAREN (285) 33 54 55 56
L_SQUARE (286) 9 60
R_SQUARE (287) 9 60
ASSIGN (288) 14
RETURN (289) 21
NUMBERS (290) 9 53
IDENT (291) 5 10 11 51 59 60
MULT (292) 46
DIV (293) 47
MOD (294) 48
ADD (295) 42
SUB (296) 43 50
LT (297) 36
LTE (298) 38
GT (299) 37
GTE (300) 39
EQ (301) 34
NEQ (302) 35
AND (303) 27
OR (304) 25
NOT (305) 29


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
prog_start (52)
    on left: 1, on right: 0
functions (53)
    on left: 2 3 4, on right: 1 3
function (54)
    on left: 5, on right: 3
declarations (55)
    on left: 6 7, on right: 5 7
declaration (56)
    on left: 8 9, on right: 7
Identifier (57)
    on left: 10 11, on right: 8 9 11
statements (58)
    on left: 12 13, on right: 5 12 16 17 22 23
statement (59)
    on left: 14 15 16 17 18 19 20 21, on right: 12 13
elseloop (60)
    on left: 22 23, on right: 15
boolex (61)
    on left: 24 25, on right: 16 17 22 23 25 33
relation (62)
    on left: 26 27, on right: 24 25 27
relation1 (63)
    on left: 28 29, on right: 26 27
r_exp (64)
    on left: 30 31 32 33, on right: 28 29
comp (65)
    on left: 34 35 36 37 38 39, on right: 30
expression (66)
    on left: 40, on right: 14 21 30 54 57 58 60
plminus (67)
    on left: 41 42 43, on right: 40 42 43
mult_exp (68)
    on left: 44, on right: 40 42 43
longterm (69)
    on left: 45 46 47 48, on right: 44 46 47 48
term (70)
    on left: 49 50 51, on right: 44 46 47 48
upperterm (71)
    on left: 52 53 54, on right: 49 50
lowerterm (72)
    on left: 55 56, on right: 51
term_exp (73)
    on left: 57 58, on right: 55 58
var (74)
    on left: 59 60, on right: 14 52 61 62
Vars (75)
    on left: 61 62, on right: 18 19 62


State 0

    0 $accept: . prog_start $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 2 (functions)

    prog_start  go to state 3
    functions   go to state 4
    function    go to state 5


State 1

    4 functions: error .

    $default  reduce using rule 4 (functions)


State 2

    5 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6


State 3

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 4

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 5

    3 functions: function . functions

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 5


State 6

    5 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

    5 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 6 (declarations)

    declarations  go to state 12
    declaration   go to state 13
    Identifier    go to state 14


State 11

   10 Identifier: IDENT .
   11           | IDENT . COMMA Identifier

    COMMA  shift, and go to state 15

    $default  reduce using rule 10 (Identifier)


State 12

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 16


State 13

    7 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 17


State 14

    8 declaration: Identifier . COLON INTEGER
    9            | Identifier . COLON ARRAY L_SQUARE NUMBERS R_SQUARE OF INTEGER

    COLON  shift, and go to state 18


State 15

   11 Identifier: IDENT COMMA . Identifier

    IDENT  shift, and go to state 11

    Identifier  go to state 19


State 16

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

    7 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 11

    $default  reduce using rule 6 (declarations)

    declarations  go to state 21
    declaration   go to state 13
    Identifier    go to state 14


State 18

    8 declaration: Identifier COLON . INTEGER
    9            | Identifier COLON . ARRAY L_SQUARE NUMBERS R_SQUARE OF INTEGER

    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23


State 19

   11 Identifier: IDENT COMMA Identifier .

    $default  reduce using rule 11 (Identifier)


State 20

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 6 (declarations)

    declarations  go to state 24
    declaration   go to state 13
    Identifier    go to state 14


State 21

    7 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


State 22

    8 declaration: Identifier COLON INTEGER .

    $default  reduce using rule 8 (declaration)


State 23

    9 declaration: Identifier COLON ARRAY . L_SQUARE NUMBERS R_SQUARE OF INTEGER

    L_SQUARE  shift, and go to state 25


State 24

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 26


State 25

    9 declaration: Identifier COLON ARRAY L_SQUARE . NUMBERS R_SQUARE OF INTEGER

    NUMBERS  shift, and go to state 27


State 26

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 28


State 27

    9 declaration: Identifier COLON ARRAY L_SQUARE NUMBERS . R_SQUARE OF INTEGER

    R_SQUARE  shift, and go to state 29


State 28

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statements  go to state 38
    statement   go to state 39
    elseloop    go to state 40
    var         go to state 41


State 29

    9 declaration: Identifier COLON ARRAY L_SQUARE NUMBERS R_SQUARE . OF INTEGER

    OF  shift, and go to state 42


State 30

   22 elseloop: IF . boolex THEN statements ENDIF
   23         | IF . boolex THEN statements ELSE statements ENDIF

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    NOT      shift, and go to state 49

    boolex      go to state 50
    relation    go to state 51
    relation1   go to state 52
    r_exp       go to state 53
    expression  go to state 54
    mult_exp    go to state 55
    term        go to state 56
    upperterm   go to state 57
    var         go to state 58


State 31

   16 statement: WHILE . boolex BEGINLOOP statements ENDLOOP

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    NOT      shift, and go to state 49

    boolex      go to state 59
    relation    go to state 51
    relation1   go to state 52
    r_exp       go to state 53
    expression  go to state 54
    mult_exp    go to state 55
    term        go to state 56
    upperterm   go to state 57
    var         go to state 58


State 32

   17 statement: DO . BEGINLOOP statements ENDLOOP WHILE boolex

    BEGINLOOP  shift, and go to state 60


State 33

   20 statement: CONTINUE .

    $default  reduce using rule 20 (statement)


State 34

   18 statement: READ . Vars

    IDENT  shift, and go to state 37

    var   go to state 61
    Vars  go to state 62


State 35

   19 statement: WRITE . Vars

    IDENT  shift, and go to state 37

    var   go to state 61
    Vars  go to state 63


State 36

   21 statement: RETURN . expression

    L_PAREN  shift, and go to state 64
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48

    expression  go to state 65
    mult_exp    go to state 55
    term        go to state 56
    upperterm   go to state 57
    var         go to state 58


State 37

   59 var: IDENT .
   60    | IDENT . L_SQUARE expression R_SQUARE

    L_SQUARE  shift, and go to state 66

    $default  reduce using rule 59 (var)


State 38

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 67


State 39

   12 statements: statement . SEMICOLON statements
   13           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 40

   15 statement: elseloop .

    $default  reduce using rule 15 (statement)


State 41

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 69


State 42

    9 declaration: Identifier COLON ARRAY L_SQUARE NUMBERS R_SQUARE OF . INTEGER

    INTEGER  shift, and go to state 70


State 43

   31 r_exp: TRUE .

    $default  reduce using rule 31 (r_exp)


State 44

   32 r_exp: FALSE .

    $default  reduce using rule 32 (r_exp)


State 45

   33 r_exp: L_PAREN . boolex R_PAREN
   54 upperterm: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    NOT      shift, and go to state 49

    boolex      go to state 71
    relation    go to state 51
    relation1   go to state 52
    r_exp       go to state 53
    expression  go to state 72
    mult_exp    go to state 55
    term        go to state 56
    upperterm   go to state 57
    var         go to state 58


State 46

   53 upperterm: NUMBERS .

    $default  reduce using rule 53 (upperterm)


State 47

   51 term: IDENT . lowerterm
   59 var: IDENT .
   60    | IDENT . L_SQUARE expression R_SQUARE

    L_PAREN   shift, and go to state 73
    L_SQUARE  shift, and go to state 66

    $default  reduce using rule 59 (var)

    lowerterm  go to state 74


State 48

   50 term: SUB . upperterm

    L_PAREN  shift, and go to state 64
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 37

    upperterm  go to state 75
    var        go to state 58


State 49

   29 relation1: NOT . r_exp

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48

    r_exp       go to state 76
    expression  go to state 54
    mult_exp    go to state 55
    term        go to state 56
    upperterm   go to state 57
    var         go to state 58


State 50

   22 elseloop: IF boolex . THEN statements ENDIF
   23         | IF boolex . THEN statements ELSE statements ENDIF
   25 boolex: boolex . OR relation

    THEN  shift, and go to state 77
    OR    shift, and go to state 78


State 51

   24 boolex: relation .
   27 relation: relation . AND relation1

    AND  shift, and go to state 79

    $default  reduce using rule 24 (boolex)


State 52

   26 relation: relation1 .

    $default  reduce using rule 26 (relation)


State 53

   28 relation1: r_exp .

    $default  reduce using rule 28 (relation1)


State 54

   30 r_exp: expression . comp expression

    LT   shift, and go to state 80
    LTE  shift, and go to state 81
    GT   shift, and go to state 82
    GTE  shift, and go to state 83
    EQ   shift, and go to state 84
    NEQ  shift, and go to state 85

    comp  go to state 86


State 55

   40 expression: mult_exp . plminus

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88

    $default  reduce using rule 41 (plminus)

    plminus  go to state 89


State 56

   44 mult_exp: term . longterm

    MULT  shift, and go to state 90
    DIV   shift, and go to state 91
    MOD   shift, and go to state 92

    $default  reduce using rule 45 (longterm)

    longterm  go to state 93


State 57

   49 term: upperterm .

    $default  reduce using rule 49 (term)


State 58

   52 upperterm: var .

    $default  reduce using rule 52 (upperterm)


State 59

   16 statement: WHILE boolex . BEGINLOOP statements ENDLOOP
   25 boolex: boolex . OR relation

    BEGINLOOP  shift, and go to state 94
    OR         shift, and go to state 78


State 60

   17 statement: DO BEGINLOOP . statements ENDLOOP WHILE boolex

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statements  go to state 95
    statement   go to state 39
    elseloop    go to state 40
    var         go to state 41


State 61

   61 Vars: var .
   62     | var . COMMA Vars

    COMMA  shift, and go to state 96

    $default  reduce using rule 61 (Vars)


State 62

   18 statement: READ Vars .

    $default  reduce using rule 18 (statement)


State 63

   19 statement: WRITE Vars .

    $default  reduce using rule 19 (statement)


State 64

   54 upperterm: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 64
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48

    expression  go to state 97
    mult_exp    go to state 55
    term        go to state 56
    upperterm   go to state 57
    var         go to state 58


State 65

   21 statement: RETURN expression .

    $default  reduce using rule 21 (statement)


State 66

   60 var: IDENT L_SQUARE . expression R_SQUARE

    L_PAREN  shift, and go to state 64
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48

    expression  go to state 98
    mult_exp    go to state 55
    term        go to state 56
    upperterm   go to state 57
    var         go to state 58


State 67

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 5 (function)


State 68

   12 statements: statement SEMICOLON . statements
   13           | statement SEMICOLON .

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    $default  reduce using rule 13 (statements)

    statements  go to state 99
    statement   go to state 39
    elseloop    go to state 40
    var         go to state 41


State 69

   14 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 64
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48

    expression  go to state 100
    mult_exp    go to state 55
    term        go to state 56
    upperterm   go to state 57
    var         go to state 58


State 70

    9 declaration: Identifier COLON ARRAY L_SQUARE NUMBERS R_SQUARE OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 71

   25 boolex: boolex . OR relation
   33 r_exp: L_PAREN boolex . R_PAREN

    R_PAREN  shift, and go to state 101
    OR       shift, and go to state 78


State 72

   30 r_exp: expression . comp expression
   54 upperterm: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 102
    LT       shift, and go to state 80
    LTE      shift, and go to state 81
    GT       shift, and go to state 82
    GTE      shift, and go to state 83
    EQ       shift, and go to state 84
    NEQ      shift, and go to state 85

    comp  go to state 86


State 73

   55 lowerterm: L_PAREN . term_exp R_PAREN
   56          | L_PAREN . R_PAREN

    L_PAREN  shift, and go to state 64
    R_PAREN  shift, and go to state 103
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48

    expression  go to state 104
    mult_exp    go to state 55
    term        go to state 56
    upperterm   go to state 57
    term_exp    go to state 105
    var         go to state 58


State 74

   51 term: IDENT lowerterm .

    $default  reduce using rule 51 (term)


State 75

   50 term: SUB upperterm .

    $default  reduce using rule 50 (term)


State 76

   29 relation1: NOT r_exp .

    $default  reduce using rule 29 (relation1)


State 77

   22 elseloop: IF boolex THEN . statements ENDIF
   23         | IF boolex THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statements  go to state 106
    statement   go to state 39
    elseloop    go to state 40
    var         go to state 41


State 78

   25 boolex: boolex OR . relation

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    NOT      shift, and go to state 49

    relation    go to state 107
    relation1   go to state 52
    r_exp       go to state 53
    expression  go to state 54
    mult_exp    go to state 55
    term        go to state 56
    upperterm   go to state 57
    var         go to state 58


State 79

   27 relation: relation AND . relation1

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    NOT      shift, and go to state 49

    relation1   go to state 108
    r_exp       go to state 53
    expression  go to state 54
    mult_exp    go to state 55
    term        go to state 56
    upperterm   go to state 57
    var         go to state 58


State 80

   36 comp: LT .

    $default  reduce using rule 36 (comp)


State 81

   38 comp: LTE .

    $default  reduce using rule 38 (comp)


State 82

   37 comp: GT .

    $default  reduce using rule 37 (comp)


State 83

   39 comp: GTE .

    $default  reduce using rule 39 (comp)


State 84

   34 comp: EQ .

    $default  reduce using rule 34 (comp)


State 85

   35 comp: NEQ .

    $default  reduce using rule 35 (comp)


State 86

   30 r_exp: expression comp . expression

    L_PAREN  shift, and go to state 64
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48

    expression  go to state 109
    mult_exp    go to state 55
    term        go to state 56
    upperterm   go to state 57
    var         go to state 58


State 87

   42 plminus: ADD . mult_exp plminus

    L_PAREN  shift, and go to state 64
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48

    mult_exp   go to state 110
    term       go to state 56
    upperterm  go to state 57
    var        go to state 58


State 88

   43 plminus: SUB . mult_exp plminus

    L_PAREN  shift, and go to state 64
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48

    mult_exp   go to state 111
    term       go to state 56
    upperterm  go to state 57
    var        go to state 58


State 89

   40 expression: mult_exp plminus .

    $default  reduce using rule 40 (expression)


State 90

   46 longterm: MULT . term longterm

    L_PAREN  shift, and go to state 64
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48

    term       go to state 112
    upperterm  go to state 57
    var        go to state 58


State 91

   47 longterm: DIV . term longterm

    L_PAREN  shift, and go to state 64
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48

    term       go to state 113
    upperterm  go to state 57
    var        go to state 58


State 92

   48 longterm: MOD . term longterm

    L_PAREN  shift, and go to state 64
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48

    term       go to state 114
    upperterm  go to state 57
    var        go to state 58


State 93

   44 mult_exp: term longterm .

    $default  reduce using rule 44 (mult_exp)


State 94

   16 statement: WHILE boolex BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statements  go to state 115
    statement   go to state 39
    elseloop    go to state 40
    var         go to state 41


State 95

   17 statement: DO BEGINLOOP statements . ENDLOOP WHILE boolex

    ENDLOOP  shift, and go to state 116


State 96

   62 Vars: var COMMA . Vars

    IDENT  shift, and go to state 37

    var   go to state 61
    Vars  go to state 117


State 97

   54 upperterm: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 102


State 98

   60 var: IDENT L_SQUARE expression . R_SQUARE

    R_SQUARE  shift, and go to state 118


State 99

   12 statements: statement SEMICOLON statements .

    $default  reduce using rule 12 (statements)


State 100

   14 statement: var ASSIGN expression .

    $default  reduce using rule 14 (statement)


State 101

   33 r_exp: L_PAREN boolex R_PAREN .

    $default  reduce using rule 33 (r_exp)


State 102

   54 upperterm: L_PAREN expression R_PAREN .

    $default  reduce using rule 54 (upperterm)


State 103

   56 lowerterm: L_PAREN R_PAREN .

    $default  reduce using rule 56 (lowerterm)


State 104

   57 term_exp: expression .
   58         | expression . COMMA term_exp

    COMMA  shift, and go to state 119

    $default  reduce using rule 57 (term_exp)


State 105

   55 lowerterm: L_PAREN term_exp . R_PAREN

    R_PAREN  shift, and go to state 120


State 106

   22 elseloop: IF boolex THEN statements . ENDIF
   23         | IF boolex THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 121
    ELSE   shift, and go to state 122


State 107

   25 boolex: boolex OR relation .
   27 relation: relation . AND relation1

    AND  shift, and go to state 79

    $default  reduce using rule 25 (boolex)


State 108

   27 relation: relation AND relation1 .

    $default  reduce using rule 27 (relation)


State 109

   30 r_exp: expression comp expression .

    $default  reduce using rule 30 (r_exp)


State 110

   42 plminus: ADD mult_exp . plminus

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88

    $default  reduce using rule 41 (plminus)

    plminus  go to state 123


State 111

   43 plminus: SUB mult_exp . plminus

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88

    $default  reduce using rule 41 (plminus)

    plminus  go to state 124


State 112

   46 longterm: MULT term . longterm

    MULT  shift, and go to state 90
    DIV   shift, and go to state 91
    MOD   shift, and go to state 92

    $default  reduce using rule 45 (longterm)

    longterm  go to state 125


State 113

   47 longterm: DIV term . longterm

    MULT  shift, and go to state 90
    DIV   shift, and go to state 91
    MOD   shift, and go to state 92

    $default  reduce using rule 45 (longterm)

    longterm  go to state 126


State 114

   48 longterm: MOD term . longterm

    MULT  shift, and go to state 90
    DIV   shift, and go to state 91
    MOD   shift, and go to state 92

    $default  reduce using rule 45 (longterm)

    longterm  go to state 127


State 115

   16 statement: WHILE boolex BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 128


State 116

   17 statement: DO BEGINLOOP statements ENDLOOP . WHILE boolex

    WHILE  shift, and go to state 129


State 117

   62 Vars: var COMMA Vars .

    $default  reduce using rule 62 (Vars)


State 118

   60 var: IDENT L_SQUARE expression R_SQUARE .

    $default  reduce using rule 60 (var)


State 119

   58 term_exp: expression COMMA . term_exp

    L_PAREN  shift, and go to state 64
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48

    expression  go to state 104
    mult_exp    go to state 55
    term        go to state 56
    upperterm   go to state 57
    term_exp    go to state 130
    var         go to state 58


State 120

   55 lowerterm: L_PAREN term_exp R_PAREN .

    $default  reduce using rule 55 (lowerterm)


State 121

   22 elseloop: IF boolex THEN statements ENDIF .

    $default  reduce using rule 22 (elseloop)


State 122

   23 elseloop: IF boolex THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statements  go to state 131
    statement   go to state 39
    elseloop    go to state 40
    var         go to state 41


State 123

   42 plminus: ADD mult_exp plminus .

    $default  reduce using rule 42 (plminus)


State 124

   43 plminus: SUB mult_exp plminus .

    $default  reduce using rule 43 (plminus)


State 125

   46 longterm: MULT term longterm .

    $default  reduce using rule 46 (longterm)


State 126

   47 longterm: DIV term longterm .

    $default  reduce using rule 47 (longterm)


State 127

   48 longterm: MOD term longterm .

    $default  reduce using rule 48 (longterm)


State 128

   16 statement: WHILE boolex BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 16 (statement)


State 129

   17 statement: DO BEGINLOOP statements ENDLOOP WHILE . boolex

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    NUMBERS  shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    NOT      shift, and go to state 49

    boolex      go to state 132
    relation    go to state 51
    relation1   go to state 52
    r_exp       go to state 53
    expression  go to state 54
    mult_exp    go to state 55
    term        go to state 56
    upperterm   go to state 57
    var         go to state 58


State 130

   58 term_exp: expression COMMA term_exp .

    $default  reduce using rule 58 (term_exp)


State 131

   23 elseloop: IF boolex THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 133


State 132

   17 statement: DO BEGINLOOP statements ENDLOOP WHILE boolex .
   25 boolex: boolex . OR relation

    OR  shift, and go to state 78

    $default  reduce using rule 17 (statement)


State 133

   23 elseloop: IF boolex THEN statements ELSE statements ENDIF .

    $default  reduce using rule 23 (elseloop)
